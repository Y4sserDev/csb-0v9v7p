{"version":3,"sources":["App.js","index.js"],"names":["styles","Appearance","getColorScheme","StyleSheet","create","dark","div","backgroundColor","light","App","useState","theme","setTheme","style","onClick","rootElement","document","getElementById","createRoot","render"],"mappings":"qLAOMA,GADcC,IAAWC,iBAChBC,IAAWC,OAAO,CAC/BC,KAAM,CACJC,IAAK,CACHC,gBAAiB,QAGrBC,MAAO,CACLF,IAAK,CACHC,gBAAiB,aAKR,SAASE,IACtB,MAA0BC,mBAAS,SAAQ,mBAApCC,EAAK,KAAEC,EAAQ,KAMtB,OACE,qBAAKC,MAAOb,EAAOM,IAAI,SACrB,wBAAQQ,QAAS,kBAAMF,EAAmB,UAAVD,EAAoB,OAAS,QAAQ,EAAC,SAAC,UAK7E,CC7BA,IAAMI,EAAcC,SAASC,eAAe,QAC/BC,qBAAWH,GAEnBI,OACH,cAAC,aAAU,UACT,cAACV,EAAG,M","file":"static/js/main.793c27fc.chunk.js","sourcesContent":["import \"./styles.css\";\nimport { Appearance, StyleSheet } from \"react-native\";\nimport { useState } from \"react\";\n\n// static getColorScheme(): 'light' | 'dark' | default;\n// static addChangeListener()\nconst colorScheme = Appearance.getColorScheme();\nconst styles = StyleSheet.create({\n  dark: {\n    div: {\n      backgroundColor: \"red\"\n    }\n  },\n  light: {\n    div: {\n      backgroundColor: \"black\"\n    }\n  }\n});\n\nexport default function App() {\n  const [theme, setTheme] = useState(\"Light\");\n  const themeData = { theme, setTheme };\n\n  if (colorScheme === \"dark\") {\n    //\n  }\n  return (\n    <div style={styles.div}>\n      <button onClick={() => setTheme(theme === \"Light\" ? \"Dark\" : \"Light\")}>\n        TEST\n      </button>\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}